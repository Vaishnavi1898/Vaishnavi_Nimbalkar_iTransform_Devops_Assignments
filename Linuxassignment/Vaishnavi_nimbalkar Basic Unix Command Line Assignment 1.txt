
Assignments:-

1. List the contents of a directory and their attributes
 ls

2. Long list the content with file, directory ownership, permissions,sizes, etcâ€¦
 ls -l

3. Display the size of the file in human readable format
 ls -lh

4. Show all files and folders including hidden one
 ls -a

5. list directories recursively
 ls -R 

6. Sort the files by size with largest at the top
 ls -s

7. Sort the files by last time modified displaying the newest first.
ls -t

8. Diplay the location of a program/command, where it is installed.
 ls -m  , this will show man page. installed in bin folders, in/user/bin, /home user/bin

9. Which command is used to switch directory from one to another
 cd

10. List all the environment variables set for the current shell environment
 

11. Did you notice something in the output of "env" command?
 yes, It will print list of current environment vsriables

12. Which command is used to print the text or any variables value in the Console/Terminal?
 echo

13. Print the value of the env variable "PATH" on the console

14. Is linux a case-sensitive operating system?
 Yes
15. Is, "Ls" same as "ls"?
 Both ls and Ls commands shows directory listing ,in ls directory names are separated by /.

16. Display your currently logged in user
 w command

17. how do you change the currrently logged in user to another user?
 su command

18. Which command is used to leave a shell environment that you are currently logged in to?
 exit

19. How do you reboot the system?
 "su"/"sudo" to root account. then " sudo reboot " to reboot the box, then server will automaticaly reboot itself.

20. How do you shutdown the system?
 shutdown/s

21. Display all the major running processes in the system
 ps command in that it display PID, PPID, PGID,etc.

22. Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
 PID -Process ID, When process started it is given a unique number called PID.
 PPID -Parent process Id, child process started and work within the space od there corresponding parent process.
 PGID -Process group Identifier, First member process of process group is process group leader.
 SID - Security identifier,when user login tocomputer ther SID and privileges are read gives access. 

23. Display the name of the system kernel
 -s command

24. display the kernel release number


25. display teh machine type of the current kernel
 -m command

26. Display the name of the operating system that the kernel is running on
 -o command

27. Display all info that uname command can show.
 -a command

28. Display the name of directory that you are currently pointing to
 pwd command

29. change the current directory to another directory that you have in your system.
 cd command
30. Go up one directory
 cd..(two dots) command

31. Return to last directory
 cd-

32. change the current directory to home(logged in user's) directory
cd~

33. How to check all the command used from the prompt (Command History)
 

34. In which file the history of commands are stored in?
bash_history file

35. How many lines of history does the system keep and from where you can change it?
 mostly it set up 100, 500, 1000 commands but we can chane limit for that firt write HISTSIZE= required no. then bind 'set history-size' 

36. How can you modify bash's history behaviour
 PROMPT_COMMAND

37. Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.
  $ history command the we see all commands are listed then for runing prticular command from history list we simply write $ !command no., eg $ !4

38. What are the different types of shell and where are they used and how do we use them?
 C shell - denoted as csh, It includes helpful programming features like buil-in arithmatics and C-like expression syntax. 
            For non-root user defult prompt is hostname %, For root user defult prompt is hostname #.
 Bourne shell - denoted by sh, It is faster and more prefered. 
            For non-root user defult prompt is $, For root user defult prompt is #.
 Koren shell - denoted byksh, It is faster than c shell, It supports Bourne shell.
            For non-root user defult prompt is $, For root user defult prompt is #.
 GNU bourne-again shell - denoted by bash, it includes features from koren and bourne shell.
            For non-root user defult prompt is bash=g.gg$, For root user defult prompt is bash-g.gg#.

39.What is the difference between login shell and non-login shell?
 If the Output is name of our shell, pretended by dash eg -su,-bash, etc. then it is login shell. Non login shell is started by a program without login.In this case program just passes the name of the shell executable.

40. How do we start login shell and non-login shell?
 Login shell is initiated by -l or --login and non-login starts when you start a shell in a terminal in an existing session (screen, X terminal, Emacs terminal buffer, a shell inside another,etc.)you get intractive non-login shell.

41. What happens when you start a login shell (which files are read and used and Why)?


42. What happens when you start a non-login shell (Which files are read and used and Why)?

43. What are Shell Configuration Files, why do we need it?
 This file contain individual specific configrations. this file is read at login and also each time new bash line is started.this is where u should place any aliases.

44. Explain the Order of file usage from the system/user's home directory when user logs in to the System.
 /etc/profile -> /etc/profile.d/ -> ~/.bash_profile -> ~/.bashrc -> etc/bashrc

45. What are Shell Variables, list major shell variables and what do they represent?
 It is speciable variable and it set by the shell and it affect only current shell.
 $PATH - list of directories to search for commands.
 $user - your user name.
 $SHELL - absolute pathname of your login shell
 $TERM - Type of your terminal.

46. How we see all our env variables?
 printenv command or env

47. How we see all env variables in alphabical order?
 sort-object
  
48. What Format does the env var and its values are stored?
  
49. How do you create your own varible?
 simply assig vale by using = operator.

50. How do you start a new bash shell?
 Creat file using editor and save with extenstion .sh, start script with #!/bin/sh

51. Difference between Local/Shell variables to Global Variable
 Local veriable declared inside the function whereas global variable is declared outside the function. local variables are created when function has started executing is lost when function ends, in golbal variable variable is created  as execution start and lost when program ends.

52. Making a variable accessible from other the shell in the system.
 If you want to make a variable available to every new process, then you can put it in /etc/environment (requires root privileges) or ~/. profile . Once you put it in these variables, you typically have to re-login.

53. Show the real life use case of exporting a variable
 export [-f] [-n] [name[=value] ...] or export -p
-p : To view all exported variables on current shell. (Syntax: $ export -p)

54. Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"
 Give execution rights to script file using chmod u+x file_name.sh
 Write a code in script file starting with shebang"$!/user/bin/env bash" and then save it
 now you need to source  .bash_profile oncethen you can run your my_app.sh as command
  
55. What is Globbing? Explain in depth with examples?
 It is used for matching file names and expanding specific types of patterns.
 suppose we want 4 charecter .txt file then we write $ ls -l ????.txt

56. List all entries with extension ".sh"
 co.sh, com.sh, org.sh, gov.sh, edu.sh, net.sh, nom.sh 

57. List all entries with numbers in it.


58. List all entries that starts with a character and ends with a number
 ls[{a-z},{A-Z},{0-9}]

59. List all entries that name length more than 5 characters


60. What is Quoting? and Why do we need it?
 In Linux Shell, many special characters have their own special meanings. Sometimes they are used to perform an action while other times they are just used as a character, so the quoting mechanism performs this task it makes us use them in whatever way we want to.

61. Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.


62. How do you find a particular files/directories based on a particular search criteria?
HINT:- look for commands -> locate, find and whereis

63. Write major difference between locate, find and whereis?
 Big difference is that find searches real files recursively down a given directory, while locate searches a database without requiring specific directory. Thus, if you have saved a file before updating database, find will find it , but locate won't.

64. How Globbing is different from locate, find and whereis?
  Big difference is that find searches real files recursively down a given directory, while locate searches a database without requiring specific directory.
So find is what you use when you want to search by particular criteria and also manipulate files. It has many more options than locate so allows far more fine-grained control of results.

65. Explain the Linux File System.
  A Linux file system is a structured collection of files on a disk drive or a partition. ... The general-purpose computer system needs to store data systematically so that we can easily access the files in less time. It stores the data on hard disks (HDD) or some equivalent storage type.

66. Explain absolute and Relative Paths
 An absolute path is defined as specifying the location of a file or directory from the root directory(/). In other words,we can say that an absolute path is a complete path from start of actual file system from / directory. Relative path. Relative path is defined as the path related to the present working directly(pwd)

67. What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
 1. using touch command test.txt
 2. The cat command is short for concatenate. It can be used to output the contents of several files, one file, or even part of a file. If the file doesnâ€™t exist, the Linux cat command will create it. cat > test2.txt
 3. A redirection operator is a name for a character that changes the destination where the results are displayed. > test3.txt
 4. The echo command will duplicate whatever you specify in the command, and put the copy into a file. echo â€˜Random sample textâ€™ > test4.txt
 5. The printf command works like the echo command, and it adds some formatting functionality. To add a single line of text, enter: printf â€˜First line of text\nâ€™ test5.txt

68. In how many ways we can delete the files from linux system? write an example of each and teh difference between them.
 1. Syntax: rm command eg.  $ rm abc.txt
 2. for deleting 3 files, run : rm firstfile secondfile thirdfile
 3.Removing sub directories form directory , $rm -rf mydir
 4.For confirmation before deleting use -i, $rm -i filename 
69. Archiving files using linux command, write a command to archive set of files from linux commands.
 tar extension to archive files
 Common tar archives: tar -xf archive. tar.
 Gzip tar archive: tar -xzf archive. tgz.
 Bzip tar archive: tar -xjf archive. tbz.

70. Extract the archived files from the above step.